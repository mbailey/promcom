volumes:
  prometheus_data: {}
  grafana_data: {}

networks:
  front-tier: null
  back-tier: null

services:

  alertmanager:
    image: docker.io/prom/alertmanager:v0.27.0
    ports:
    - 9093:9093
    volumes:
    - ./alertmanager/:/etc/alertmanager/
    networks:
    - back-tier
    command:
    - --config.file=/etc/alertmanager/config.yml
    - --storage.path=/alertmanager

  blackbox_exporter:
    image: docker.io/prom/blackbox-exporter:v0.25.0
    dns: 1.1.1.1
    ports:
    - 9115:9115
    volumes:
    - ./blackbox:/blackbox
    networks:
    - back-tier
    command: --config.file=/blackbox/config.yml

  grafana:
    image: docker.io/grafana/grafana:11.3.0
    healthcheck:
      test:
      - CMD
      - wget
      - --spider
      - -q
      - http://localhost:3000/api/health
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
    - prometheus
    ports:
    - 3000:3000
    volumes:
    - grafana_data:/var/lib/grafana:rw
    - ./grafana/conf/provisioning/:/etc/grafana/provisioning/:ro
    - ./grafana/conf/defaults.ini:/etc/grafana/grafana.ini:ro
    - ${AWS_SHARED_CREDENTIALS_FILE:-~/.aws/credentials}:${AWS_SHARED_CREDENTIALS_FILE:-/home/grafana/.aws/credentials}:ro
    environment:
      - AWS_REGION
      - AWS_DEFAULT_REGION
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
      - AWS_SESSION_TOKEN
      - AWS_PROFILE
      - AWS_SHARED_CREDENTIALS_FILE
    env_file:
    - ./grafana/config.env
    networks:
    - back-tier
    - front-tier

  nginx:
    image: docker.io/nginx:1.25.3
    ports:
    - 8080:80
    networks:
    - back-tier
    - front-tier
    volumes:
    - ./nginx/html:/usr/share/nginx/html:ro
    - ./nginx/etc/nginx/nginx.conf:/etc/nginx/nginx.conf:ro

  # node-exporter:
  #   <<: *common
  #   image: quay.io/prometheus/node-exporter:latest
  #   volumes:
  #     - /proc:/host/proc:ro
  #     - /sys:/host/sys:ro
  #     - /:/rootfs:ro
  #     - /:/host:ro,rslave
  #   command: 
  #     - '--path.rootfs=/host'
  #     - '--path.procfs=/host/proc' 
  #     - '--path.sysfs=/host/sys'
  #     - --collector.filesystem.ignored-mount-points
  #     - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
  #   ports:
  #     - 9100:9100
  #   networks:
  #     - back-tier

  prometheus:
    image: docker.io/prom/prometheus:v2.55.0
    healthcheck:
      test:
      - CMD
      - wget
      - --spider
      - -q
      - http://localhost:9090/-/healthy
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
    - ./prometheus/:/etc/prometheus/
    - prometheus_data:/prometheus
    extra_hosts:
      - "node-exporter:host-gateway"
    command:
    - --config.file=/etc/prometheus/config.yml
    - --storage.tsdb.path=/prometheus
    - --web.console.libraries=/usr/share/prometheus/console_libraries
    - --web.console.templates=/usr/share/prometheus/consoles
    - --web.enable-lifecycle
    ports:
    - 9090:9090
    networks:
      - back-tier
